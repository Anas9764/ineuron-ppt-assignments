Q.10 How do you define an asynchronous function in JavaScript using async/await?

Ans -
To define an asynchronous function in JavaScript using async/await, you need to prefix the function declaration with the async keyword. This indicates that the function will perform asynchronous operations and will return a promise.

Here's the syntax for defining an asynchronous function:

javascript
Copy code
async function functionName() {
  // Asynchronous operations
}
Here's an example that demonstrates the usage of async/await to define an asynchronous function:

javascript
Copy code
async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.log('Error:', error);
  }
}
In the example, fetchData() is defined as an asynchronous function using the async keyword. Inside the function, the await keyword is used to pause the execution until a promise is resolved. The function performs asynchronous operations, such as making an HTTP request with fetch() and parsing the response data with response.json(). The try/catch block is used to handle any errors that may occur during the asynchronous operations.